# Generated by Django 4.2.4 on 2024-11-26 18:11

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AliExpressApi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Credential Name"),
                ),
                (
                    "api_token",
                    models.CharField(
                        max_length=250, verbose_name="AliExpress API Token"
                    ),
                ),
            ],
            options={
                "verbose_name": "AliExpress API",
                "verbose_name_plural": "AliExpress API",
            },
        ),
        migrations.CreateModel(
            name="AmazonApi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Credential Name"),
                ),
                (
                    "secret_key",
                    models.CharField(
                        max_length=250, verbose_name="Amazon API Secret Key"
                    ),
                ),
                (
                    "access_key",
                    models.CharField(
                        max_length=250, verbose_name="Amazon API Access Key"
                    ),
                ),
                (
                    "partner_tag",
                    models.CharField(
                        max_length=250, verbose_name="Amazon API Partner Tag"
                    ),
                ),
                (
                    "country",
                    models.CharField(max_length=5, verbose_name="Amazon API Country"),
                ),
            ],
            options={
                "verbose_name": "Amazon API",
                "verbose_name_plural": "Amazon API",
            },
        ),
        migrations.CreateModel(
            name="TelegramBotConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bot_name",
                    models.CharField(max_length=150, verbose_name="Telegram Bot Name"),
                ),
                (
                    "bot_api_token",
                    models.CharField(
                        max_length=250, verbose_name="Telegram Bot API Token"
                    ),
                ),
                (
                    "channel_name",
                    models.CharField(
                        max_length=150, verbose_name="Telegram Bot Channel Name"
                    ),
                ),
                (
                    "channel_id",
                    models.CharField(
                        max_length=150, verbose_name="Telegram Bot Channel ID"
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Telegram Bot Enabled"
                    ),
                ),
            ],
            options={
                "verbose_name": "Telegram Bot Config",
                "verbose_name_plural": "Telegram Bot Configs",
            },
        ),
        migrations.CreateModel(
            name="AmazonManualTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Task Name")),
                (
                    "status",
                    models.CharField(
                        choices=[("New", "New"), ("Done", "Done")],
                        default="New",
                        max_length=10,
                        verbose_name="Task Status",
                    ),
                ),
                (
                    "asins",
                    models.JSONField(
                        default=list,
                        help_text='The field must be empty, for example: [] or contain a list of ASIN\'s in the following JSON format: ["ASIN", "ASIN"].',
                        verbose_name="Amazon Products Asins",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Start Time"
                    ),
                ),
                (
                    "amazon_api",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks_amazon_api",
                        to="main_app.amazonapi",
                        verbose_name="Amazon API Credentials",
                    ),
                ),
            ],
            options={
                "verbose_name": "Amazon Manual Task",
                "verbose_name_plural": "Amazon Manual Tasks",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
