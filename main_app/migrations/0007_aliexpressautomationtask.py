# Generated by Django 4.2.4 on 2024-12-09 19:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("main_app", "0006_alter_aliexpressmanualtask_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="AliExpressAutomationTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Task Name")),
                (
                    "status",
                    models.CharField(
                        choices=[("New", "New"), ("Done", "Done")],
                        default="New",
                        max_length=10,
                        verbose_name="Task Status",
                    ),
                ),
                ("keywords", models.CharField(verbose_name="KeyWords")),
                (
                    "num_items",
                    models.IntegerField(
                        default=1,
                        help_text="Min: 1, Max: 10",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Number of Items",
                    ),
                ),
                (
                    "min_price",
                    models.IntegerField(
                        default=0,
                        help_text="Filters search results to items with at least one offer price above the specified value. Prices appear in lowest currency denomination. For example, $31.41 should be passed as 3141 or 28.00€ should be 2800.",
                        verbose_name="Min Price",
                    ),
                ),
                (
                    "max_price",
                    models.IntegerField(
                        default=0,
                        help_text="Filters search results to items with at least one offer price above the specified value. Prices appear in lowest currency denomination. For example, $31.41 should be passed as 3141 or 28.00€ should be 2800.",
                        verbose_name="Max Price",
                    ),
                ),
                (
                    "delivery_days",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="Delivery Days",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Start Time"
                    ),
                ),
                (
                    "aliexpress_api",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auto_tasks_aliexpress_api",
                        to="main_app.aliexpressapi",
                        verbose_name="AliExpress API Credentials",
                    ),
                ),
                (
                    "bot",
                    models.ManyToManyField(
                        to="main_app.telegrambotconfig",
                        verbose_name="Telegram Bot Configs",
                    ),
                ),
            ],
            options={
                "verbose_name": "AliExpress Automation Task",
                "verbose_name_plural": "AliExpress Automation Tasks",
            },
        ),
    ]
